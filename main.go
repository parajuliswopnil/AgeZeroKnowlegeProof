package main

import (
	"crypto/sha256"
	"fmt"
)

func main() {
	s := "s is a random string generated by the issueing body"

	// now nets suppose you have to prove you are over the age of 18

	// lets suppose your DOB is on 1/1/2000
	// the issuer signs you are born before the date 1/1/2050

	var sbyte [32]byte
	var output [32]byte
	var input [32]byte
	var officialProof [32]byte
	var verifyerResult [32]byte
	copy(sbyte[:], s)

	input = sbyte

	a := 18264 // this is the total number of days between the DOB and the date 1/1/2050

	for i := 0; i < a; i++ {
		output = hashFunction(input[:])
		input = output
	}

	officialProof = output

	fmt.Printf("output from the issuer %x", output)
	fmt.Println()

	// alices proof

	b := 1828 

	input = sbyte

	for i := 0; i < b; i++ {
		output = hashFunction(input[:])
		input = output
	}
	fmt.Printf("output from alice %x", output)
	fmt.Println()

	// verifiers calculation
	c := 16436

	for i := 0; i < c; i++ {
		output = hashFunction(input[:])
		input = output
	}
	fmt.Printf("output from verifier %x", output)
	fmt.Println()

	// verifying logic
  verifyerResult = output

	if officialProof != verifyerResult {
    fmt.Println("not verified")
		return
	}

	fmt.Println("verifed the age is greater than 18")
}

func hashFunction(input []byte) [32]byte {
	sum := sha256.Sum256(input)
	return sum
}
